@page
@model BSVisionCalculator.Pages.RelativePositionsCalculationAjaxModel
@{
    Layout = "_Ajax_Layout";
}

<div id="result">
    <h2>Safe ranges on any posture <span title="These are safe ranges for any two bloqs or a wall and bloq in the left half of vision. For the right half, consider the symmetric situation. More precise information for more specific situations can be found below.">&#9432;</span></h2>
    <div>
        <h3>Any two bloqs</h3>
        <div class="regimesummary">
            @Html.Raw(ViewData["overall_bloqbloq"])
        </div>
    </div>
    <div>
        <h3>Any wall and bloq</h3>
        <div class="regimesummary">        
            @Html.Raw(ViewData["overall_wallbloq"])
        </div>
    </div>
    <div>   
        <div class="tabs">
            <button class="tablinks posturetablinks tab_posture_centred active defaultOpen" onclick="openPostureTab(event, 'centred')">Centred</button>
            <button class="tablinks posturetablinks tab_posture_lean_left" onclick="openPostureTab(event, 'lean_left')">Lean left</button>
            <button class="tablinks posturetablinks tab_posture_lean_right" onclick="openPostureTab(event, 'lean_right')">Lean Right</button>
            <button class="tablinks posturetablinks tab_posture_squat" onclick="openPostureTab(event, 'squat')">Squat</button>
            <button class="tablinks posturetablinks tab_posture_squat_left" onclick="openPostureTab(event, 'squat_left')">Squat Left</button>
            <button class="tablinks posturetablinks tab_posture_squat_right" onclick="openPostureTab(event, 'squat_right')">Squat Right</button>
        </div>
        <div id="posture" class="tabcontent">
        </div>
        <div id="posture_centred" hidden>
            <div>
                <h3>Any two bloqs</h3>
                <div class="regimesummary">
                    @Html.Raw(ViewData["centred_bloqbloq"])
                </div>
            </div>
            <div>
                <h3>Any wall and bloq</h3>
                <div class="regimesummary">
                    @Html.Raw(ViewData["centred_wallbloq"])
                </div>
            </div>
            <div class="tabs">
                <button class="tablinks categorytablinks tab_category_hardvb active defaultOpen" onclick="openCategoryTab(event, 'hardvb')">Hard VB</button>
                <button class="tablinks categorytablinks tab_category_near_lanes" onclick="openCategoryTab(event, 'near_lanes')">Near lanes</button>
                <button class="tablinks categorytablinks tab_category_inlines" onclick="openCategoryTab(event, 'inlines')">Inlines</button>
                <button class="tablinks categorytablinks tab_category_other_bloqs" onclick="openCategoryTab(event, 'other_bloqs')">Other bloq-bloq</button>
                <button class="tablinks categorytablinks tab_category_full_wall" onclick="openCategoryTab(event, 'full_wall')">Full wall</button>
                <button class="tablinks categorytablinks tab_category_squat_wall" onclick="openCategoryTab(event, 'squat_wall')">Squat wall</button>
                <button class="tablinks categorytablinks tab_category_full_side_wall" onclick="openCategoryTab(event, 'full_side_wall')">Side wall</button>
                <button class="tablinks categorytablinks tab_category_half_side_wall" onclick="openCategoryTab(event, 'half_side_wall')">Half side wall</button>
                <button class="tablinks categorytablinks tab_category_full_centre_wall" onclick="openCategoryTab(event, 'full_centre_wall')">Centre wall</button>
                <button class="tablinks categorytablinks tab_category_half_centre_wall" onclick="openCategoryTab(event, 'half_centre_wall')">Half centre wall</button>
                <button class="tablinks categorytablinks tab_category_low_walls" onclick="openCategoryTab(event, 'low_walls')">Low walls</button>
            </div>
            <div class="tabcontent posture_centred_category">
            </div>
            <div id="posture_centred_category_hardvb" hidden>
                <div class="regimesummary">
                    @Html.Raw(ViewData["centred_hardvb"])
                </div>                
                <div>
                    @Html.Raw(ViewData["centred_hardvb_positions"])
                </div>
            </div>
        </div>
        <div id="posture_lean_left" hidden>
            <div>
                <h3>Any two bloqs</h3>
                <div class="regimesummary">
                    @Html.Raw(ViewData["left_bloqbloq"])
                </div>
            </div>
            <div>
                <h3>Any wall and bloq</h3>
                <div class="regimesummary">
                    @Html.Raw(ViewData["left_wallbloq"])
                </div>
            </div>
        </div>
        <div id="posture_lean_right" hidden>
            <div>
                <h3>Any two bloqs</h3>
                <div class="regimesummary">
                    @Html.Raw(ViewData["right_bloqbloq"])
                </div>
            </div>
            <div>
                <h3>Any wall and bloq</h3>
                <div class="regimesummary">
                    @Html.Raw(ViewData["right_wallbloq"])
                </div>
            </div>
        </div>
        <div id="posture_squat" hidden>
            <div>
                <h3>Any two bloqs</h3>
                <div class="regimesummary">
                    @Html.Raw(ViewData["squat_bloqbloq"])
                </div>
            </div>
            <div>
                <h3>Any wall and bloq</h3>
                <div class="regimesummary">
                    @Html.Raw(ViewData["squat_wallbloq"])
                </div>
            </div>
        </div>
        <div id="posture_squat_left" hidden>
            <div>
                <h3>Any two bloqs</h3>
                <div class="regimesummary">
                    @Html.Raw(ViewData["squat_left_bloqbloq"])
                </div>
            </div>
            <div>
                <h3>Any wall and bloq</h3>
                <div class="regimesummary">
                    @Html.Raw(ViewData["squat_left_wallbloq"])
                </div>
            </div>
        </div>
        <div id="posture_squat_right" hidden>
            <div>
                <h3>Any two bloqs</h3>
                <div class="regimesummary">
                    @Html.Raw(ViewData["squat_right_bloqbloq"])
                </div>
            </div>
            <div>
                <h3>Any wall and bloq</h3>
                <div class="regimesummary">
                    @Html.Raw(ViewData["squat_right_wallbloq"])
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        function openPostureTab(event, tabName)
        {
            $('#posture').html($('#posture_'+tabName).html());
            
            if(event.currentTarget != null)
            {
                $('.posturetablinks').removeClass('active');                        
                        
                //event.currentTarget.className += " active";
                $('.tab_posture_' + tabName).addClass('active');
            }
        }

        function openCategoryTab(event, tabName) {
            $('.posture_centred_category').html($('#posture_centred_category_' + tabName).html());

            if (event.currentTarget != null) {
                $('.categorytablinks').removeClass('active');

                //event.currentTarget.className += " active";
                $('.tab_category_' + tabName).addClass('active');
            }
        }
    </script>
    <script>
        $('.defaultOpen').click();
    </script>
}
